@model Squid.Users.User
@using Disco.Common
@{
    Layout = "~/Views/Shared/Templates/MainLayout.cshtml";
    
    if (Model.NotificationSettings == null || Model.NotificationSettings.Count == 0)
    {
        Model.NotificationSettings = new Dictionary<string, Squid.Users.NotificationSetting>
            {
                // activity involving you
                { "activity_new_friend_request", new Squid.Users.NotificationSetting { Name = "Someone sends me a friend request", Wishlu = true, Email = true, Mobile = false } },
                { "activity_friend_request_accepted", new Squid.Users.NotificationSetting { Name = "A friend request I have sent is accepted", Wishlu = true, Email = true, Mobile = false } },
                { "activity_invitation_accepted", new Squid.Users.NotificationSetting { Name = "Someone I invite joins wishlu", Wishlu = true, Email = true, Mobile = false } },
                { "activity_new_item_comment", new Squid.Users.NotificationSetting { Name = "Someone comments on one of my items", Wishlu = true, Email = false, Mobile = false } },
                { "activity_item_copied", new Squid.Users.NotificationSetting { Name = "Someone has copied one of my items", Wishlu = true, Email = true, Mobile = false } },
                { "activity_item_gifted", new Squid.Users.NotificationSetting { Name = "Someone has gifted one of my items", Wishlu = true, Email = true, Mobile = false } },
                { "activity_new_follower", new Squid.Users.NotificationSetting { Name = "A new user has followed you", Wishlu = true, Email = false, Mobile = false } },

                // wishlu subscriptions
                { "subscription_new_item", new Squid.Users.NotificationSetting { Name = "A new item has been added to a wishlu you a subscribed to", Wishlu = true, Email = false, Mobile = false } },
                { "subscription_item_removed", new Squid.Users.NotificationSetting { Name = "An item has been removed (moved or deleted) from a wishlu you a subscribed to", Wishlu = true, Email = false, Mobile = false } },
                { "subscription_item_gifted", new Squid.Users.NotificationSetting { Name = "An item belonging to a wishlu you are subscribed to has been gifted", Wishlu = true, Email = false, Mobile = false } },
                { "subscription_item_confirmed", new Squid.Users.NotificationSetting { Name = "A gift has been confirmed for an item in a wishlu you are subscribed to", Wishlu = true, Email = false, Mobile = false } },
                { "subscription_date_changed", new Squid.Users.NotificationSetting { Name = "The date of a wishlu you are subscribed to has been changed (added, changed, removed)", Wishlu = true, Email = true, Mobile = false } },
                { "subscription_name_changed", new Squid.Users.NotificationSetting { Name = "A wishlu you are subscribed to has been renamed", Wishlu = true, Email = false, Mobile = false } },

                // reminders
                { "reminder_subscribed_wishlu", new Squid.Users.NotificationSetting { Name = "Subscribed wishlus", Wishlu = true, Email = true, Mobile = false } },
                { "reminder_birthday", new Squid.Users.NotificationSetting { Name = "Birthdays", Wishlu = true, Email = true, Mobile = false } },

                // wishlu news and updates
                { "wishlu_tips_tricks", new Squid.Users.NotificationSetting { Name = "wishlu Tips & Tricks", Wishlu = false, Email = true, Mobile = false } },
                { "wishlu_suggestions", new Squid.Users.NotificationSetting { Name = "gift ideas & suggestions", Wishlu = false, Email = true, Mobile = false } },
                { "wishlu_platform_updates", new Squid.Users.NotificationSetting { Name = "Platform Updates", Wishlu = false, Email = true, Mobile = false } },
                { "wishlu_company_news", new Squid.Users.NotificationSetting { Name = "wishlu Company News", Wishlu = false, Email = true, Mobile = false } },

                // Followers
                { "following_new_wishlu", new Squid.Users.NotificationSetting { Name = "A user I follow has added a new wishlu", Wishlu = true, Email = false, Mobile = false } },
                { "following_new_item", new Squid.Users.NotificationSetting { Name = "A user I follow has added a new item", Wishlu = true, Email = false, Mobile = false } },                
                { "following_post", new Squid.Users.NotificationSetting { Name = "A store you follow has posted an update", Wishlu = true, Email = false, Mobile = false } },

                // Milkshake
                { "milkshake_price_change", new Squid.Users.NotificationSetting { Name = "The price for one of your items has changed", Wishlu = true, Email = false, Mobile = false } },
                { "milkshake_product_sale", new Squid.Users.NotificationSetting { Name = "One of your items has gone on sale", Wishlu = true, Email = false, Mobile = false } }
            };

        Model.Update();
    }
}

@section page {
    wishlu - notifications
}

@section title {
    my account <i class="fa fa-angle-right" style="margin-left: 5px; margin-right: 5px;"></i> notifications
}

@section styles {
    <link href="//assets.wishlu.com/css/bootstrap-switch.css" rel="stylesheet">
}

@section scripts {
<script src="//assets.wishlu.com/js/bootstrap-switch.js"></script>

    <script>
        $(document).ready(function () {
            $.fn.bootstrapSwitch.defaults.size = 'small';
            $('input[type="checkbox"]').bootstrapSwitch();

            $('input[type="checkbox"]').on("switchChange.bootstrapSwitch", function (e,s) {                
                var key = $(this).data("id");
                var medium = $(this).data("medium");
                var val = s;

                $.get("/user/notification?key=" + encodeURIComponent(key) + "&medium=" + encodeURIComponent(medium) + "&value=" + encodeURIComponent(val), null, function (data) {                    
                    if (data.result === true) {                        
                    }
                    else {
                        swal("Uh oh...", data.message, "error");
                        $(this).checked = !val;
                    }
                });
            });
        });
    </script>
}

<div class="row" style="margin-bottom:10px;">
    <div class="col-xs-12">
        <ul class="nav nav-pills nav-justified">
            <li role="presentation">
                <a href="/user/index">
                    <i class="fa fa-fw fa-cogs" style="color:gray;"></i> general
                </a>
            </li>
            <li role="presentation">
                <a href="/user/privacy">
                    <i class="fa fa-fw fa-lock" style="color: gold;"></i> privacy
                </a>
            </li>
            <li role="presentation">
                <a href="/user/blocking">
                    <i class="fa fa-fw fa-minus-circle" style="color: indianred;"></i> blocking
                </a>
            </li>
            <li role="presentation" class="active">
                <a href="/user/notifications">
                    <i class="fa fa-fw fa-globe" style="color: deepskyblue;"></i> notifications
                </a>
            </li>
            <li role="presentation">
                <a href="/user/mobile">
                    <i class="fa fa-fw fa-mobile" style="color:darkslategray;"></i> mobile
                </a>
            </li>
            <li role="presentation">
                <a href="/user/findfriends">
                    <i class="fa fa-fw fa-users" style="color:midnightblue"></i> find friends
                </a>
            </li>
            <li role="presentation">
                <a href="/user/social">
                    <i class="fa fa-fw fa-cubes" style="color:gray;"></i> social
                </a>
            </li>
        </ul>
    </div>
</div>

@helper NotificationSetting(KeyValuePair<string,Squid.Users.NotificationSetting> setting)
{
    <div class="row">
        <div class="col-xs-12 col-md-6">
            <h5>@setting.Value.Name</h5>
        </div>
        <div class="col-xs-4 col-md-2 text-center">
            <input type="checkbox" checked="@setting.Value.Wishlu" data-id="@setting.Key" data-medium="wishlu" />
        </div>
        <div class="col-xs-4 col-md-2 text-center">
            <input type="checkbox" checked="@setting.Value.Email" data-id="@setting.Key" data-medium="email" />
        </div>
        <div class="col-xs-4 col-md-2 text-center">
            <input type="checkbox" checked="@setting.Value.Mobile" data-id="@setting.Key" data-medium="mobile" @(Model.HasPhone ? "" : "disabled") />
        </div>
    </div>
} 

<div class="row">
    <div class="col-xs-12" style="color: gray;">        
        <div class="row">
            <div class="col-xs-4 col-md-2 col-md-offset-6 text-center">
                <i class="fa fa-share-alt fa-2x"></i>
                <div><b>on wishlu</b></div>
            </div>
            <div class="col-xs-4 col-md-2 text-center">
                <i class="fa fa-envelope fa-2x"></i>
                <div><b>via email</b></div>
            </div>            
            <div class="col-xs-4 col-md-2 text-center">
                <i class="fa fa-mobile fa-2x"></i>
                <div><b>by text</b></div>
            </div>            
        </div>

        <div class="row">
            <div class="col-xs-12">
                <h3><i class="fa fa-fw fa-user" style="color:#CFDF51"></i><b>activity involving you</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("activity_")))
        {
            @:@NotificationSetting(ns)
        }

        <div class="row">
            <div class="col-xs-12">
                <h3><i class="fa fa-fw fa-bars"></i><b>wishlu subscriptions</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("subscription_")))
        {
            @:@NotificationSetting(ns)
        }

        <div class="row">
            <div class="col-xs-12">
                <h3><i class="fa fa-fw fa-bell"></i><b>reminders</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("reminder_")))
        {
            @:@NotificationSetting(ns)
        }

        <div class="row">
            <div class="col-xs-12">
                <h3><img src="//assets.wishlu.com/images/headerLogo.png" style="width:35px;height:35px;" /><b>wishlu news & updates</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("wishlu_")))
        {
            @:@NotificationSetting(ns)
        }

        <div class="row">
            <div class="col-xs-12">
                <h3><i class="fa fa-fw fa-users"></i><b>followers</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("following_")))
        {
            @:@NotificationSetting(ns)
        }

        <div class="row">
            <div class="col-xs-12">
                <h3><i class="fa fa-fw fa-dollar" style="color: darkgreen;"></i><b>pricing</b></h3>
            </div>
        </div>

        @foreach (var ns in Model.NotificationSettings.Where(x => x.Key.StartsWith("milkshake_")))
        {
            @:@NotificationSetting(ns)
        }
    </div>
</div>